connection.dialect = org.hibernate.dialect.PostgreSQLDialect
connection.driver_class = org.postgresql.Driver

# "db" maps to service name defined in Docker Compose
# "dhis2" maps to POSTGRES_DB defined in Docker Compose
connection.url = jdbc:postgresql://${POSTGRES_HOST}/${DATABASE_NAME}

# maps to POSTGRES_USER environment variable in Docker Compose.
connection.username = ${DHIS2_USER}

# maps to POSTGRES_PASSWORD environment variable in Docker Compose.
connection.password = ${DHIS2_PASSWORD}

# ----------------------------------------------------------------------
# Server
# ----------------------------------------------------------------------

# Enable secure settings if deployed on HTTPS, default 'off', can be 'on'
#server.https = on

# Server base URL
#server.base.url = https://dhis2-surveillance-svc/

# File store provider. Currently 'filesystem' and 'aws-s3' are supported.
#filestore.provider = 'aws-s3'

# Directory in external directory on local file system and bucket on AWS S3
#filestore.container = files

# The following configuration is applicable to cloud storage only (AWS S3)

# Datacenter location. Optional but recommended for performance reasons.
#filestore.location = eu-west-1

# Username / Access key on AWS S3
#filestore.identity = xxxx

# Password / Secret key on AWS S3 (sensitive)
#filestore.secret = xxxx

# Cache invalidation config

#redis.cache.invalidation.enabled = on

# Shared Redis configuration
#redis.host = REDIS_HOST
#redis.port = REDIS_PORT
#redis.password = PASSWORD (Optional, only if enabled on Redis server)
#redis.use.ssl = true (Optional, only if enabled on Redis server)
